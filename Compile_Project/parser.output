Terminals unused in grammar

   ADDR


State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_decl
    5            | func_decl

    6 var_decl: type ID SEMI
    7         | type ID LBR NUM RBR SEMI

    8 type: VOID
    9     | INT

   10 func_decl: type ID LPR paras RPR comp_stmt

   11 paras: para_list
   12      | VOID
   13      | /* empty */

   14 para_list: para_list COM para
   15          | para

   16 para: type ID
   17     | type ID LBR RBR

   18 comp_stmt: LCR local_decls stmt_list RCR

   19 local_decls: local_decls var_decl
   20            | /* empty */

   21 stmt_list: stmt_list stmt
   22          | /* empty */

   23 stmt: expr_stmt
   24     | comp_stmt
   25     | selc_stmt
   26     | iter_stmt
   27     | retn_stmt

   28 expr_stmt: expr SEMI
   29          | SEMI

   30 selc_stmt: IF LPR expr RPR stmt
   31          | IF LPR expr RPR stmt ELSE stmt

   32 iter_stmt: WHILE LPR expr RPR stmt

   33 retn_stmt: RETURN expr SEMI
   34          | RETURN SEMI

   35 expr: var ASN expr
   36     | simple_expr

   37 var: ID
   38    | ID LBR expr RBR

   39 simple_expr: add_expr relop add_expr
   40            | add_expr

   41 relop: GE
   42      | GEQ
   43      | LE
   44      | LEQ
   45      | EQ
   46      | NEQ

   47 add_expr: add_expr addop term
   48         | term

   49 addop: ADD
   50      | SUB

   51 term: term mulop factor
   52     | factor

   53 mulop: MUL
   54      | DIV

   55 factor: LPR expr RPR
   56       | var
   57       | call
   58       | NUM

   59 call: ID LPR args RPR

   60 args: arg_list
   61     | /* empty */

   62 arg_list: arg_list COM expr
   63         | expr


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 49
SUB (259) 50
MUL (260) 53
DIV (261) 54
COM (262) 14 62
ASN (263) 35
LCR (264) 18
RCR (265) 18
LBR (266) 7 17 38
RBR (267) 7 17 38
LPR (268) 10 30 31 32 55 59
RPR (269) 10 30 31 32 55 59
SEMI (270) 6 7 28 29 33 34
INT (271) 9
VOID (272) 8 12
IF (273) 30 31
ELSE (274) 31
WHILE (275) 32
RETURN (276) 33 34
LE (277) 43
LEQ (278) 44
GE (279) 41
GEQ (280) 42
EQ (281) 45
NEQ (282) 46
ADDR (283)
ID (284) 6 7 10 16 17 37 38 59
NUM (285) 7 58


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
declaration_list (33)
    on left: 2 3, on right: 1 2
declaration (34)
    on left: 4 5, on right: 2 3
var_decl (35)
    on left: 6 7, on right: 4 19
type (36)
    on left: 8 9, on right: 6 7 10 16 17
func_decl (37)
    on left: 10, on right: 5
paras (38)
    on left: 11 12 13, on right: 10
para_list (39)
    on left: 14 15, on right: 11 14
para (40)
    on left: 16 17, on right: 14 15
comp_stmt (41)
    on left: 18, on right: 10 24
local_decls (42)
    on left: 19 20, on right: 18 19
stmt_list (43)
    on left: 21 22, on right: 18 21
stmt (44)
    on left: 23 24 25 26 27, on right: 21 30 31 32
expr_stmt (45)
    on left: 28 29, on right: 23
selc_stmt (46)
    on left: 30 31, on right: 25
iter_stmt (47)
    on left: 32, on right: 26
retn_stmt (48)
    on left: 33 34, on right: 27
expr (49)
    on left: 35 36, on right: 28 30 31 32 33 35 38 55 62 63
var (50)
    on left: 37 38, on right: 35 56
simple_expr (51)
    on left: 39 40, on right: 36
relop (52)
    on left: 41 42 43 44 45 46, on right: 39
add_expr (53)
    on left: 47 48, on right: 39 40 47
addop (54)
    on left: 49 50, on right: 47
term (55)
    on left: 51 52, on right: 47 48 51
mulop (56)
    on left: 53 54, on right: 51
factor (57)
    on left: 55 56 57 58, on right: 51 52
call (58)
    on left: 59, on right: 57
args (59)
    on left: 60 61, on right: 59
arg_list (60)
    on left: 62 63, on right: 60 62


state 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_decl          go to state 6
    type              go to state 7
    func_decl         go to state 8


state 1

    9 type: INT .

    $default  reduce using rule 9 (type)


state 2

    8 type: VOID .

    $default  reduce using rule 8 (type)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration  go to state 10
    var_decl     go to state 6
    type         go to state 7
    func_decl    go to state 8


state 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


state 6

    4 declaration: var_decl .

    $default  reduce using rule 4 (declaration)


state 7

    6 var_decl: type . ID SEMI
    7         | type . ID LBR NUM RBR SEMI
   10 func_decl: type . ID LPR paras RPR comp_stmt

    ID  shift, and go to state 11


state 8

    5 declaration: func_decl .

    $default  reduce using rule 5 (declaration)


state 9

    0 $accept: program $end .

    $default  accept


state 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 11

    6 var_decl: type ID . SEMI
    7         | type ID . LBR NUM RBR SEMI
   10 func_decl: type ID . LPR paras RPR comp_stmt

    LBR   shift, and go to state 12
    LPR   shift, and go to state 13
    SEMI  shift, and go to state 14


state 12

    7 var_decl: type ID LBR . NUM RBR SEMI

    NUM  shift, and go to state 15


state 13

   10 func_decl: type ID LPR . paras RPR comp_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 16

    $default  reduce using rule 13 (paras)

    type       go to state 17
    paras      go to state 18
    para_list  go to state 19
    para       go to state 20


state 14

    6 var_decl: type ID SEMI .

    $default  reduce using rule 6 (var_decl)


state 15

    7 var_decl: type ID LBR NUM . RBR SEMI

    RBR  shift, and go to state 21


state 16

    8 type: VOID .
   12 paras: VOID .

    RPR       reduce using rule 12 (paras)
    $default  reduce using rule 8 (type)


state 17

   16 para: type . ID
   17     | type . ID LBR RBR

    ID  shift, and go to state 22


state 18

   10 func_decl: type ID LPR paras . RPR comp_stmt

    RPR  shift, and go to state 23


state 19

   11 paras: para_list .
   14 para_list: para_list . COM para

    COM  shift, and go to state 24

    $default  reduce using rule 11 (paras)


state 20

   15 para_list: para .

    $default  reduce using rule 15 (para_list)


state 21

    7 var_decl: type ID LBR NUM RBR . SEMI

    SEMI  shift, and go to state 25


state 22

   16 para: type ID .
   17     | type ID . LBR RBR

    LBR  shift, and go to state 26

    $default  reduce using rule 16 (para)


state 23

   10 func_decl: type ID LPR paras RPR . comp_stmt

    LCR  shift, and go to state 27

    comp_stmt  go to state 28


state 24

   14 para_list: para_list COM . para

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type  go to state 17
    para  go to state 29


state 25

    7 var_decl: type ID LBR NUM RBR SEMI .

    $default  reduce using rule 7 (var_decl)


state 26

   17 para: type ID LBR . RBR

    RBR  shift, and go to state 30


state 27

   18 comp_stmt: LCR . local_decls stmt_list RCR

    $default  reduce using rule 20 (local_decls)

    local_decls  go to state 31


state 28

   10 func_decl: type ID LPR paras RPR comp_stmt .

    $default  reduce using rule 10 (func_decl)


state 29

   14 para_list: para_list COM para .

    $default  reduce using rule 14 (para_list)


state 30

   17 para: type ID LBR RBR .

    $default  reduce using rule 17 (para)


state 31

   18 comp_stmt: LCR local_decls . stmt_list RCR
   19 local_decls: local_decls . var_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 22 (stmt_list)

    var_decl   go to state 32
    type       go to state 33
    stmt_list  go to state 34


state 32

   19 local_decls: local_decls var_decl .

    $default  reduce using rule 19 (local_decls)


state 33

    6 var_decl: type . ID SEMI
    7         | type . ID LBR NUM RBR SEMI

    ID  shift, and go to state 35


state 34

   18 comp_stmt: LCR local_decls stmt_list . RCR
   21 stmt_list: stmt_list . stmt

    LCR     shift, and go to state 27
    RCR     shift, and go to state 36
    LPR     shift, and go to state 37
    SEMI    shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 45
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 35

    6 var_decl: type ID . SEMI
    7         | type ID . LBR NUM RBR SEMI

    LBR   shift, and go to state 12
    SEMI  shift, and go to state 14


state 36

   18 comp_stmt: LCR local_decls stmt_list RCR .

    $default  reduce using rule 18 (comp_stmt)


state 37

   55 factor: LPR . expr RPR

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    expr         go to state 57
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 38

   29 expr_stmt: SEMI .

    $default  reduce using rule 29 (expr_stmt)


state 39

   30 selc_stmt: IF . LPR expr RPR stmt
   31          | IF . LPR expr RPR stmt ELSE stmt

    LPR  shift, and go to state 58


state 40

   32 iter_stmt: WHILE . LPR expr RPR stmt

    LPR  shift, and go to state 59


state 41

   33 retn_stmt: RETURN . expr SEMI
   34          | RETURN . SEMI

    LPR   shift, and go to state 37
    SEMI  shift, and go to state 60
    ID    shift, and go to state 42
    NUM   shift, and go to state 43

    expr         go to state 61
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 42

   37 var: ID .
   38    | ID . LBR expr RBR
   59 call: ID . LPR args RPR

    LBR  shift, and go to state 62
    LPR  shift, and go to state 63

    $default  reduce using rule 37 (var)


state 43

   58 factor: NUM .

    $default  reduce using rule 58 (factor)


state 44

   24 stmt: comp_stmt .

    $default  reduce using rule 24 (stmt)


state 45

   21 stmt_list: stmt_list stmt .

    $default  reduce using rule 21 (stmt_list)


state 46

   23 stmt: expr_stmt .

    $default  reduce using rule 23 (stmt)


state 47

   25 stmt: selc_stmt .

    $default  reduce using rule 25 (stmt)


state 48

   26 stmt: iter_stmt .

    $default  reduce using rule 26 (stmt)


state 49

   27 stmt: retn_stmt .

    $default  reduce using rule 27 (stmt)


state 50

   28 expr_stmt: expr . SEMI

    SEMI  shift, and go to state 64


state 51

   35 expr: var . ASN expr
   56 factor: var .

    ASN  shift, and go to state 65

    $default  reduce using rule 56 (factor)


state 52

   36 expr: simple_expr .

    $default  reduce using rule 36 (expr)


state 53

   39 simple_expr: add_expr . relop add_expr
   40            | add_expr .
   47 add_expr: add_expr . addop term

    ADD  shift, and go to state 66
    SUB  shift, and go to state 67
    LE   shift, and go to state 68
    LEQ  shift, and go to state 69
    GE   shift, and go to state 70
    GEQ  shift, and go to state 71
    EQ   shift, and go to state 72
    NEQ  shift, and go to state 73

    $default  reduce using rule 40 (simple_expr)

    relop  go to state 74
    addop  go to state 75


state 54

   48 add_expr: term .
   51 term: term . mulop factor

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77

    $default  reduce using rule 48 (add_expr)

    mulop  go to state 78


state 55

   52 term: factor .

    $default  reduce using rule 52 (term)


state 56

   57 factor: call .

    $default  reduce using rule 57 (factor)


state 57

   55 factor: LPR expr . RPR

    RPR  shift, and go to state 79


state 58

   30 selc_stmt: IF LPR . expr RPR stmt
   31          | IF LPR . expr RPR stmt ELSE stmt

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    expr         go to state 80
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 59

   32 iter_stmt: WHILE LPR . expr RPR stmt

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    expr         go to state 81
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 60

   34 retn_stmt: RETURN SEMI .

    $default  reduce using rule 34 (retn_stmt)


state 61

   33 retn_stmt: RETURN expr . SEMI

    SEMI  shift, and go to state 82


state 62

   38 var: ID LBR . expr RBR

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    expr         go to state 83
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 63

   59 call: ID LPR . args RPR

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    $default  reduce using rule 61 (args)

    expr         go to state 84
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56
    args         go to state 85
    arg_list     go to state 86


state 64

   28 expr_stmt: expr SEMI .

    $default  reduce using rule 28 (expr_stmt)


state 65

   35 expr: var ASN . expr

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    expr         go to state 87
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 66

   49 addop: ADD .

    $default  reduce using rule 49 (addop)


state 67

   50 addop: SUB .

    $default  reduce using rule 50 (addop)


state 68

   43 relop: LE .

    $default  reduce using rule 43 (relop)


state 69

   44 relop: LEQ .

    $default  reduce using rule 44 (relop)


state 70

   41 relop: GE .

    $default  reduce using rule 41 (relop)


state 71

   42 relop: GEQ .

    $default  reduce using rule 42 (relop)


state 72

   45 relop: EQ .

    $default  reduce using rule 45 (relop)


state 73

   46 relop: NEQ .

    $default  reduce using rule 46 (relop)


state 74

   39 simple_expr: add_expr relop . add_expr

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    var       go to state 88
    add_expr  go to state 89
    term      go to state 54
    factor    go to state 55
    call      go to state 56


state 75

   47 add_expr: add_expr addop . term

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    var     go to state 88
    term    go to state 90
    factor  go to state 55
    call    go to state 56


state 76

   53 mulop: MUL .

    $default  reduce using rule 53 (mulop)


state 77

   54 mulop: DIV .

    $default  reduce using rule 54 (mulop)


state 78

   51 term: term mulop . factor

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    var     go to state 88
    factor  go to state 91
    call    go to state 56


state 79

   55 factor: LPR expr RPR .

    $default  reduce using rule 55 (factor)


state 80

   30 selc_stmt: IF LPR expr . RPR stmt
   31          | IF LPR expr . RPR stmt ELSE stmt

    RPR  shift, and go to state 92


state 81

   32 iter_stmt: WHILE LPR expr . RPR stmt

    RPR  shift, and go to state 93


state 82

   33 retn_stmt: RETURN expr SEMI .

    $default  reduce using rule 33 (retn_stmt)


state 83

   38 var: ID LBR expr . RBR

    RBR  shift, and go to state 94


state 84

   63 arg_list: expr .

    $default  reduce using rule 63 (arg_list)


state 85

   59 call: ID LPR args . RPR

    RPR  shift, and go to state 95


state 86

   60 args: arg_list .
   62 arg_list: arg_list . COM expr

    COM  shift, and go to state 96

    $default  reduce using rule 60 (args)


state 87

   35 expr: var ASN expr .

    $default  reduce using rule 35 (expr)


state 88

   56 factor: var .

    $default  reduce using rule 56 (factor)


state 89

   39 simple_expr: add_expr relop add_expr .
   47 add_expr: add_expr . addop term

    ADD  shift, and go to state 66
    SUB  shift, and go to state 67

    $default  reduce using rule 39 (simple_expr)

    addop  go to state 75


state 90

   47 add_expr: add_expr addop term .
   51 term: term . mulop factor

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77

    $default  reduce using rule 47 (add_expr)

    mulop  go to state 78


state 91

   51 term: term mulop factor .

    $default  reduce using rule 51 (term)


state 92

   30 selc_stmt: IF LPR expr RPR . stmt
   31          | IF LPR expr RPR . stmt ELSE stmt

    LCR     shift, and go to state 27
    LPR     shift, and go to state 37
    SEMI    shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 97
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 93

   32 iter_stmt: WHILE LPR expr RPR . stmt

    LCR     shift, and go to state 27
    LPR     shift, and go to state 37
    SEMI    shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 98
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 94

   38 var: ID LBR expr RBR .

    $default  reduce using rule 38 (var)


state 95

   59 call: ID LPR args RPR .

    $default  reduce using rule 59 (call)


state 96

   62 arg_list: arg_list COM . expr

    LPR  shift, and go to state 37
    ID   shift, and go to state 42
    NUM  shift, and go to state 43

    expr         go to state 99
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 97

   30 selc_stmt: IF LPR expr RPR stmt .
   31          | IF LPR expr RPR stmt . ELSE stmt

    ELSE  shift, and go to state 100

    ELSE      [reduce using rule 30 (selc_stmt)]
    $default  reduce using rule 30 (selc_stmt)


state 98

   32 iter_stmt: WHILE LPR expr RPR stmt .

    $default  reduce using rule 32 (iter_stmt)


state 99

   62 arg_list: arg_list COM expr .

    $default  reduce using rule 62 (arg_list)


state 100

   31 selc_stmt: IF LPR expr RPR stmt ELSE . stmt

    LCR     shift, and go to state 27
    LPR     shift, and go to state 37
    SEMI    shift, and go to state 38
    IF      shift, and go to state 39
    WHILE   shift, and go to state 40
    RETURN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 101
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


state 101

   31 selc_stmt: IF LPR expr RPR stmt ELSE stmt .

    $default  reduce using rule 31 (selc_stmt)
