State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_decl
    5            | func_decl

    6 var_decl: type ID ';'
    7         | type ID '[' NUM ']' ';'

    8 type: VOID
    9     | INT

   10 func_decl: type ID '(' paras ')' comp_stmt

   11 paras: para_list
   12      | VOID

   13 para_list: para_list ',' para
   14          | para

   15 para: type ID
   16     | type ID '[' ']'

   17 comp_stmt: '{' local_decls stmt_list '}'

   18 local_decls: local_decls var_decl
   19            | %empty

   20 stmt_list: stmt_list stmt
   21          | %empty

   22 stmt: expr_stmt
   23     | comp_stmt
   24     | selc_stmt
   25     | iter_stmt
   26     | retn_stmt

   27 expr_stmt: expr ';'
   28          | ';'

   29 selc_stmt: IF '(' expr ')' stmt
   30          | IF '(' expr ')' stmt ELSE stmt

   31 iter_stmt: WHILE '(' expr ')' stmt

   32 retn_stmt: RETURN expr ';'
   33          | RETURN ';'

   34 expr: var '=' expr
   35     | simple_expr

   36 var: ID
   37    | ID '[' expr ']'

   38 simple_expr: add_expr relop add_expr
   39            | add_expr

   40 relop: GE
   41      | GEQ
   42      | LE
   43      | LEQ
   44      | EQ
   45      | NEQ

   46 add_expr: add_expr addop term
   47         | term

   48 addop: '+'
   49      | '-'

   50 term: term mulop factor
   51     | factor

   52 mulop: '*'
   53      | '/'

   54 factor: '(' expr ')'
   55       | var
   56       | call
   57       | NUM

   58 call: ID '(' args ')'

   59 args: arg_list
   60     | %empty

   61 arg_list: arg_list ',' expr
   62         | expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 29 30 31 54 58
')' (41) 10 29 30 31 54 58
'*' (42) 52
'+' (43) 48
',' (44) 13 61
'-' (45) 49
'/' (47) 53
';' (59) 6 7 27 28 32 33
'=' (61) 34
'[' (91) 7 16 37
']' (93) 7 16 37
'{' (123) 17
'}' (125) 17
error (256)
ID (258) 6 7 10 15 16 36 37 58
NUM (259) 7 57
INT (260) 9
VOID (261) 8 12
IF (262) 29 30
ELSE (263) 30
WHILE (264) 31
RETURN (265) 32 33
LE (266) 42
LEQ (267) 43
GE (268) 40
GEQ (269) 41
EQ (270) 44
NEQ (271) 45


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
declaration_list (32)
    on left: 2 3, on right: 1 2
declaration (33)
    on left: 4 5, on right: 2 3
var_decl (34)
    on left: 6 7, on right: 4 18
type (35)
    on left: 8 9, on right: 6 7 10 15 16
func_decl (36)
    on left: 10, on right: 5
paras (37)
    on left: 11 12, on right: 10
para_list (38)
    on left: 13 14, on right: 11 13
para (39)
    on left: 15 16, on right: 13 14
comp_stmt (40)
    on left: 17, on right: 10 23
local_decls (41)
    on left: 18 19, on right: 17 18
stmt_list (42)
    on left: 20 21, on right: 17 20
stmt (43)
    on left: 22 23 24 25 26, on right: 20 29 30 31
expr_stmt (44)
    on left: 27 28, on right: 22
selc_stmt (45)
    on left: 29 30, on right: 24
iter_stmt (46)
    on left: 31, on right: 25
retn_stmt (47)
    on left: 32 33, on right: 26
expr (48)
    on left: 34 35, on right: 27 29 30 31 32 34 37 54 61 62
var (49)
    on left: 36 37, on right: 34 55
simple_expr (50)
    on left: 38 39, on right: 35
relop (51)
    on left: 40 41 42 43 44 45, on right: 38
add_expr (52)
    on left: 46 47, on right: 38 39 46
addop (53)
    on left: 48 49, on right: 46
term (54)
    on left: 50 51, on right: 46 47 50
mulop (55)
    on left: 52 53, on right: 50
factor (56)
    on left: 54 55 56 57, on right: 50 51
call (57)
    on left: 58, on right: 56
args (58)
    on left: 59 60, on right: 58
arg_list (59)
    on left: 61 62, on right: 59 61


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_decl          go to state 6
    type              go to state 7
    func_decl         go to state 8


State 1

    9 type: INT .

    $default  reduce using rule 9 (type)


State 2

    8 type: VOID .

    $default  reduce using rule 8 (type)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration  go to state 10
    var_decl     go to state 6
    type         go to state 7
    func_decl    go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_decl .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_decl: type . ID ';'
    7         | type . ID '[' NUM ']' ';'
   10 func_decl: type . ID '(' paras ')' comp_stmt

    ID  shift, and go to state 11


State 8

    5 declaration: func_decl .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_decl: type ID . ';'
    7         | type ID . '[' NUM ']' ';'
   10 func_decl: type ID . '(' paras ')' comp_stmt

    '('  shift, and go to state 12
    '['  shift, and go to state 13
    ';'  shift, and go to state 14


State 12

   10 func_decl: type ID '(' . paras ')' comp_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 15

    type       go to state 16
    paras      go to state 17
    para_list  go to state 18
    para       go to state 19


State 13

    7 var_decl: type ID '[' . NUM ']' ';'

    NUM  shift, and go to state 20


State 14

    6 var_decl: type ID ';' .

    $default  reduce using rule 6 (var_decl)


State 15

    8 type: VOID .
   12 paras: VOID .

    ')'       reduce using rule 12 (paras)
    $default  reduce using rule 8 (type)


State 16

   15 para: type . ID
   16     | type . ID '[' ']'

    ID  shift, and go to state 21


State 17

   10 func_decl: type ID '(' paras . ')' comp_stmt

    ')'  shift, and go to state 22


State 18

   11 paras: para_list .
   13 para_list: para_list . ',' para

    ','  shift, and go to state 23

    $default  reduce using rule 11 (paras)


State 19

   14 para_list: para .

    $default  reduce using rule 14 (para_list)


State 20

    7 var_decl: type ID '[' NUM . ']' ';'

    ']'  shift, and go to state 24


State 21

   15 para: type ID .
   16     | type ID . '[' ']'

    '['  shift, and go to state 25

    $default  reduce using rule 15 (para)


State 22

   10 func_decl: type ID '(' paras ')' . comp_stmt

    '{'  shift, and go to state 26

    comp_stmt  go to state 27


State 23

   13 para_list: para_list ',' . para

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type  go to state 16
    para  go to state 28


State 24

    7 var_decl: type ID '[' NUM ']' . ';'

    ';'  shift, and go to state 29


State 25

   16 para: type ID '[' . ']'

    ']'  shift, and go to state 30


State 26

   17 comp_stmt: '{' . local_decls stmt_list '}'

    $default  reduce using rule 19 (local_decls)

    local_decls  go to state 31


State 27

   10 func_decl: type ID '(' paras ')' comp_stmt .

    $default  reduce using rule 10 (func_decl)


State 28

   13 para_list: para_list ',' para .

    $default  reduce using rule 13 (para_list)


State 29

    7 var_decl: type ID '[' NUM ']' ';' .

    $default  reduce using rule 7 (var_decl)


State 30

   16 para: type ID '[' ']' .

    $default  reduce using rule 16 (para)


State 31

   17 comp_stmt: '{' local_decls . stmt_list '}'
   18 local_decls: local_decls . var_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 21 (stmt_list)

    var_decl   go to state 32
    type       go to state 33
    stmt_list  go to state 34


State 32

   18 local_decls: local_decls var_decl .

    $default  reduce using rule 18 (local_decls)


State 33

    6 var_decl: type . ID ';'
    7         | type . ID '[' NUM ']' ';'

    ID  shift, and go to state 35


State 34

   17 comp_stmt: '{' local_decls stmt_list . '}'
   20 stmt_list: stmt_list . stmt

    '{'     shift, and go to state 26
    '}'     shift, and go to state 36
    '('     shift, and go to state 37
    ';'     shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 45
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 35

    6 var_decl: type ID . ';'
    7         | type ID . '[' NUM ']' ';'

    '['  shift, and go to state 13
    ';'  shift, and go to state 14


State 36

   17 comp_stmt: '{' local_decls stmt_list '}' .

    $default  reduce using rule 17 (comp_stmt)


State 37

   54 factor: '(' . expr ')'

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 57
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 38

   28 expr_stmt: ';' .

    $default  reduce using rule 28 (expr_stmt)


State 39

   36 var: ID .
   37    | ID . '[' expr ']'
   58 call: ID . '(' args ')'

    '('  shift, and go to state 58
    '['  shift, and go to state 59

    $default  reduce using rule 36 (var)


State 40

   57 factor: NUM .

    $default  reduce using rule 57 (factor)


State 41

   29 selc_stmt: IF . '(' expr ')' stmt
   30          | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 60


State 42

   31 iter_stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 61


State 43

   32 retn_stmt: RETURN . expr ';'
   33          | RETURN . ';'

    '('  shift, and go to state 37
    ';'  shift, and go to state 62
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 63
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 44

   23 stmt: comp_stmt .

    $default  reduce using rule 23 (stmt)


State 45

   20 stmt_list: stmt_list stmt .

    $default  reduce using rule 20 (stmt_list)


State 46

   22 stmt: expr_stmt .

    $default  reduce using rule 22 (stmt)


State 47

   24 stmt: selc_stmt .

    $default  reduce using rule 24 (stmt)


State 48

   25 stmt: iter_stmt .

    $default  reduce using rule 25 (stmt)


State 49

   26 stmt: retn_stmt .

    $default  reduce using rule 26 (stmt)


State 50

   27 expr_stmt: expr . ';'

    ';'  shift, and go to state 64


State 51

   34 expr: var . '=' expr
   55 factor: var .

    '='  shift, and go to state 65

    $default  reduce using rule 55 (factor)


State 52

   35 expr: simple_expr .

    $default  reduce using rule 35 (expr)


State 53

   38 simple_expr: add_expr . relop add_expr
   39            | add_expr .
   46 add_expr: add_expr . addop term

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    LE   shift, and go to state 68
    LEQ  shift, and go to state 69
    GE   shift, and go to state 70
    GEQ  shift, and go to state 71
    EQ   shift, and go to state 72
    NEQ  shift, and go to state 73

    $default  reduce using rule 39 (simple_expr)

    relop  go to state 74
    addop  go to state 75


State 54

   47 add_expr: term .
   50 term: term . mulop factor

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 47 (add_expr)

    mulop  go to state 78


State 55

   51 term: factor .

    $default  reduce using rule 51 (term)


State 56

   56 factor: call .

    $default  reduce using rule 56 (factor)


State 57

   54 factor: '(' expr . ')'

    ')'  shift, and go to state 79


State 58

   58 call: ID '(' . args ')'

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    $default  reduce using rule 60 (args)

    expr         go to state 80
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56
    args         go to state 81
    arg_list     go to state 82


State 59

   37 var: ID '[' . expr ']'

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 83
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 60

   29 selc_stmt: IF '(' . expr ')' stmt
   30          | IF '(' . expr ')' stmt ELSE stmt

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 84
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 61

   31 iter_stmt: WHILE '(' . expr ')' stmt

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 85
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 62

   33 retn_stmt: RETURN ';' .

    $default  reduce using rule 33 (retn_stmt)


State 63

   32 retn_stmt: RETURN expr . ';'

    ';'  shift, and go to state 86


State 64

   27 expr_stmt: expr ';' .

    $default  reduce using rule 27 (expr_stmt)


State 65

   34 expr: var '=' . expr

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 87
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 66

   48 addop: '+' .

    $default  reduce using rule 48 (addop)


State 67

   49 addop: '-' .

    $default  reduce using rule 49 (addop)


State 68

   42 relop: LE .

    $default  reduce using rule 42 (relop)


State 69

   43 relop: LEQ .

    $default  reduce using rule 43 (relop)


State 70

   40 relop: GE .

    $default  reduce using rule 40 (relop)


State 71

   41 relop: GEQ .

    $default  reduce using rule 41 (relop)


State 72

   44 relop: EQ .

    $default  reduce using rule 44 (relop)


State 73

   45 relop: NEQ .

    $default  reduce using rule 45 (relop)


State 74

   38 simple_expr: add_expr relop . add_expr

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    var       go to state 88
    add_expr  go to state 89
    term      go to state 54
    factor    go to state 55
    call      go to state 56


State 75

   46 add_expr: add_expr addop . term

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    var     go to state 88
    term    go to state 90
    factor  go to state 55
    call    go to state 56


State 76

   52 mulop: '*' .

    $default  reduce using rule 52 (mulop)


State 77

   53 mulop: '/' .

    $default  reduce using rule 53 (mulop)


State 78

   50 term: term mulop . factor

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    var     go to state 88
    factor  go to state 91
    call    go to state 56


State 79

   54 factor: '(' expr ')' .

    $default  reduce using rule 54 (factor)


State 80

   62 arg_list: expr .

    $default  reduce using rule 62 (arg_list)


State 81

   58 call: ID '(' args . ')'

    ')'  shift, and go to state 92


State 82

   59 args: arg_list .
   61 arg_list: arg_list . ',' expr

    ','  shift, and go to state 93

    $default  reduce using rule 59 (args)


State 83

   37 var: ID '[' expr . ']'

    ']'  shift, and go to state 94


State 84

   29 selc_stmt: IF '(' expr . ')' stmt
   30          | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 95


State 85

   31 iter_stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 96


State 86

   32 retn_stmt: RETURN expr ';' .

    $default  reduce using rule 32 (retn_stmt)


State 87

   34 expr: var '=' expr .

    $default  reduce using rule 34 (expr)


State 88

   55 factor: var .

    $default  reduce using rule 55 (factor)


State 89

   38 simple_expr: add_expr relop add_expr .
   46 add_expr: add_expr . addop term

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67

    $default  reduce using rule 38 (simple_expr)

    addop  go to state 75


State 90

   46 add_expr: add_expr addop term .
   50 term: term . mulop factor

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 46 (add_expr)

    mulop  go to state 78


State 91

   50 term: term mulop factor .

    $default  reduce using rule 50 (term)


State 92

   58 call: ID '(' args ')' .

    $default  reduce using rule 58 (call)


State 93

   61 arg_list: arg_list ',' . expr

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 97
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 94

   37 var: ID '[' expr ']' .

    $default  reduce using rule 37 (var)


State 95

   29 selc_stmt: IF '(' expr ')' . stmt
   30          | IF '(' expr ')' . stmt ELSE stmt

    '{'     shift, and go to state 26
    '('     shift, and go to state 37
    ';'     shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 98
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 96

   31 iter_stmt: WHILE '(' expr ')' . stmt

    '{'     shift, and go to state 26
    '('     shift, and go to state 37
    ';'     shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 99
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 97

   61 arg_list: arg_list ',' expr .

    $default  reduce using rule 61 (arg_list)


State 98

   29 selc_stmt: IF '(' expr ')' stmt .
   30          | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 100

    ELSE      [reduce using rule 29 (selc_stmt)]
    $default  reduce using rule 29 (selc_stmt)


State 99

   31 iter_stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 31 (iter_stmt)


State 100

   30 selc_stmt: IF '(' expr ')' stmt ELSE . stmt

    '{'     shift, and go to state 26
    '('     shift, and go to state 37
    ';'     shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 101
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 101

   30 selc_stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 30 (selc_stmt)
