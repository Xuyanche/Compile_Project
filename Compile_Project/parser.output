State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_decl
    5            | func_decl

    6 var_decl: type ID ';'
    7         | type ID '[' NUM ']' ';'

    8 type: VOID
    9     | INT

   10 func_decl: type func comp_stmt

   11 func: ID '(' paras ')'

   12 paras: para_list
   13      | VOID
   14      | %empty

   15 para_list: para_list ',' para
   16          | para

   17 para: type ID
   18     | type ID '[' ']'

   19 comp_stmt: '{' local_decls stmt_list '}'

   20 local_decls: local_decls var_decl
   21            | %empty

   22 stmt_list: stmt_list stmt
   23          | %empty

   24 stmt: expr_stmt
   25     | comp_stmt
   26     | selc_stmt
   27     | iter_stmt
   28     | retn_stmt

   29 expr_stmt: expr ';'
   30          | ';'

   31 selc_stmt: IF '(' expr ')' stmt
   32          | IF '(' expr ')' stmt ELSE stmt

   33 iter_stmt: WHILE '(' expr ')' stmt

   34 retn_stmt: RETURN expr ';'
   35          | RETURN ';'

   36 expr: var '=' expr
   37     | simple_expr

   38 var: ID
   39    | ID '[' expr ']'

   40 simple_expr: add_expr relop add_expr
   41            | add_expr

   42 relop: GE
   43      | GEQ
   44      | LE
   45      | LEQ
   46      | EQ
   47      | NEQ

   48 add_expr: add_expr addop term
   49         | term

   50 addop: '+'
   51      | '-'

   52 term: term mulop factor
   53     | factor

   54 mulop: '*'
   55      | '/'

   56 factor: '(' expr ')'
   57       | var
   58       | call
   59       | NUM

   60 call: ID '(' args ')'

   61 args: arg_list
   62     | %empty

   63 arg_list: arg_list ',' expr
   64         | expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 31 32 33 56 60
')' (41) 11 31 32 33 56 60
'*' (42) 54
'+' (43) 50
',' (44) 15 63
'-' (45) 51
'/' (47) 55
';' (59) 6 7 29 30 34 35
'=' (61) 36
'[' (91) 7 18 39
']' (93) 7 18 39
'{' (123) 19
'}' (125) 19
error (256)
ID (258) 6 7 11 17 18 38 39 60
NUM (259) 7 59
INT (260) 9
VOID (261) 8 13
IF (262) 31 32
ELSE (263) 32
WHILE (264) 33
RETURN (265) 34 35
LE (266) 44
LEQ (267) 45
GE (268) 42
GEQ (269) 43
EQ (270) 46
NEQ (271) 47


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
declaration_list (32)
    on left: 2 3, on right: 1 2
declaration (33)
    on left: 4 5, on right: 2 3
var_decl (34)
    on left: 6 7, on right: 4 20
type (35)
    on left: 8 9, on right: 6 7 10 17 18
func_decl (36)
    on left: 10, on right: 5
func (37)
    on left: 11, on right: 10
paras (38)
    on left: 12 13 14, on right: 11
para_list (39)
    on left: 15 16, on right: 12 15
para (40)
    on left: 17 18, on right: 15 16
comp_stmt (41)
    on left: 19, on right: 10 25
local_decls (42)
    on left: 20 21, on right: 19 20
stmt_list (43)
    on left: 22 23, on right: 19 22
stmt (44)
    on left: 24 25 26 27 28, on right: 22 31 32 33
expr_stmt (45)
    on left: 29 30, on right: 24
selc_stmt (46)
    on left: 31 32, on right: 26
iter_stmt (47)
    on left: 33, on right: 27
retn_stmt (48)
    on left: 34 35, on right: 28
expr (49)
    on left: 36 37, on right: 29 31 32 33 34 36 39 56 63 64
var (50)
    on left: 38 39, on right: 36 57
simple_expr (51)
    on left: 40 41, on right: 37
relop (52)
    on left: 42 43 44 45 46 47, on right: 40
add_expr (53)
    on left: 48 49, on right: 40 41 48
addop (54)
    on left: 50 51, on right: 48
term (55)
    on left: 52 53, on right: 48 49 52
mulop (56)
    on left: 54 55, on right: 52
factor (57)
    on left: 56 57 58 59, on right: 52 53
call (58)
    on left: 60, on right: 58
args (59)
    on left: 61 62, on right: 60
arg_list (60)
    on left: 63 64, on right: 61 63


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_decl          go to state 6
    type              go to state 7
    func_decl         go to state 8


State 1

    9 type: INT .

    $default  reduce using rule 9 (type)


State 2

    8 type: VOID .

    $default  reduce using rule 8 (type)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration  go to state 10
    var_decl     go to state 6
    type         go to state 7
    func_decl    go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_decl .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_decl: type . ID ';'
    7         | type . ID '[' NUM ']' ';'
   10 func_decl: type . func comp_stmt

    ID  shift, and go to state 11

    func  go to state 12


State 8

    5 declaration: func_decl .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_decl: type ID . ';'
    7         | type ID . '[' NUM ']' ';'
   11 func: ID . '(' paras ')'

    '('  shift, and go to state 13
    '['  shift, and go to state 14
    ';'  shift, and go to state 15


State 12

   10 func_decl: type func . comp_stmt

    '{'  shift, and go to state 16

    comp_stmt  go to state 17


State 13

   11 func: ID '(' . paras ')'

    INT   shift, and go to state 1
    VOID  shift, and go to state 18

    $default  reduce using rule 14 (paras)

    type       go to state 19
    paras      go to state 20
    para_list  go to state 21
    para       go to state 22


State 14

    7 var_decl: type ID '[' . NUM ']' ';'

    NUM  shift, and go to state 23


State 15

    6 var_decl: type ID ';' .

    $default  reduce using rule 6 (var_decl)


State 16

   19 comp_stmt: '{' . local_decls stmt_list '}'

    $default  reduce using rule 21 (local_decls)

    local_decls  go to state 24


State 17

   10 func_decl: type func comp_stmt .

    $default  reduce using rule 10 (func_decl)


State 18

    8 type: VOID .
   13 paras: VOID .

    ')'       reduce using rule 13 (paras)
    $default  reduce using rule 8 (type)


State 19

   17 para: type . ID
   18     | type . ID '[' ']'

    ID  shift, and go to state 25


State 20

   11 func: ID '(' paras . ')'

    ')'  shift, and go to state 26


State 21

   12 paras: para_list .
   15 para_list: para_list . ',' para

    ','  shift, and go to state 27

    $default  reduce using rule 12 (paras)


State 22

   16 para_list: para .

    $default  reduce using rule 16 (para_list)


State 23

    7 var_decl: type ID '[' NUM . ']' ';'

    ']'  shift, and go to state 28


State 24

   19 comp_stmt: '{' local_decls . stmt_list '}'
   20 local_decls: local_decls . var_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 23 (stmt_list)

    var_decl   go to state 29
    type       go to state 30
    stmt_list  go to state 31


State 25

   17 para: type ID .
   18     | type ID . '[' ']'

    '['  shift, and go to state 32

    $default  reduce using rule 17 (para)


State 26

   11 func: ID '(' paras ')' .

    $default  reduce using rule 11 (func)


State 27

   15 para_list: para_list ',' . para

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type  go to state 19
    para  go to state 33


State 28

    7 var_decl: type ID '[' NUM ']' . ';'

    ';'  shift, and go to state 34


State 29

   20 local_decls: local_decls var_decl .

    $default  reduce using rule 20 (local_decls)


State 30

    6 var_decl: type . ID ';'
    7         | type . ID '[' NUM ']' ';'

    ID  shift, and go to state 35


State 31

   19 comp_stmt: '{' local_decls stmt_list . '}'
   22 stmt_list: stmt_list . stmt

    '{'     shift, and go to state 16
    '}'     shift, and go to state 36
    '('     shift, and go to state 37
    ';'     shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 45
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 32

   18 para: type ID '[' . ']'

    ']'  shift, and go to state 57


State 33

   15 para_list: para_list ',' para .

    $default  reduce using rule 15 (para_list)


State 34

    7 var_decl: type ID '[' NUM ']' ';' .

    $default  reduce using rule 7 (var_decl)


State 35

    6 var_decl: type ID . ';'
    7         | type ID . '[' NUM ']' ';'

    '['  shift, and go to state 14
    ';'  shift, and go to state 15


State 36

   19 comp_stmt: '{' local_decls stmt_list '}' .

    $default  reduce using rule 19 (comp_stmt)


State 37

   56 factor: '(' . expr ')'

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 58
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 38

   30 expr_stmt: ';' .

    $default  reduce using rule 30 (expr_stmt)


State 39

   38 var: ID .
   39    | ID . '[' expr ']'
   60 call: ID . '(' args ')'

    '('  shift, and go to state 59
    '['  shift, and go to state 60

    $default  reduce using rule 38 (var)


State 40

   59 factor: NUM .

    $default  reduce using rule 59 (factor)


State 41

   31 selc_stmt: IF . '(' expr ')' stmt
   32          | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 61


State 42

   33 iter_stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 62


State 43

   34 retn_stmt: RETURN . expr ';'
   35          | RETURN . ';'

    '('  shift, and go to state 37
    ';'  shift, and go to state 63
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 64
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 44

   25 stmt: comp_stmt .

    $default  reduce using rule 25 (stmt)


State 45

   22 stmt_list: stmt_list stmt .

    $default  reduce using rule 22 (stmt_list)


State 46

   24 stmt: expr_stmt .

    $default  reduce using rule 24 (stmt)


State 47

   26 stmt: selc_stmt .

    $default  reduce using rule 26 (stmt)


State 48

   27 stmt: iter_stmt .

    $default  reduce using rule 27 (stmt)


State 49

   28 stmt: retn_stmt .

    $default  reduce using rule 28 (stmt)


State 50

   29 expr_stmt: expr . ';'

    ';'  shift, and go to state 65


State 51

   36 expr: var . '=' expr
   57 factor: var .

    '='  shift, and go to state 66

    $default  reduce using rule 57 (factor)


State 52

   37 expr: simple_expr .

    $default  reduce using rule 37 (expr)


State 53

   40 simple_expr: add_expr . relop add_expr
   41            | add_expr .
   48 add_expr: add_expr . addop term

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    LE   shift, and go to state 69
    LEQ  shift, and go to state 70
    GE   shift, and go to state 71
    GEQ  shift, and go to state 72
    EQ   shift, and go to state 73
    NEQ  shift, and go to state 74

    $default  reduce using rule 41 (simple_expr)

    relop  go to state 75
    addop  go to state 76


State 54

   49 add_expr: term .
   52 term: term . mulop factor

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 49 (add_expr)

    mulop  go to state 79


State 55

   53 term: factor .

    $default  reduce using rule 53 (term)


State 56

   58 factor: call .

    $default  reduce using rule 58 (factor)


State 57

   18 para: type ID '[' ']' .

    $default  reduce using rule 18 (para)


State 58

   56 factor: '(' expr . ')'

    ')'  shift, and go to state 80


State 59

   60 call: ID '(' . args ')'

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    $default  reduce using rule 62 (args)

    expr         go to state 81
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56
    args         go to state 82
    arg_list     go to state 83


State 60

   39 var: ID '[' . expr ']'

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 84
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 61

   31 selc_stmt: IF '(' . expr ')' stmt
   32          | IF '(' . expr ')' stmt ELSE stmt

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 85
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 62

   33 iter_stmt: WHILE '(' . expr ')' stmt

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 86
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 63

   35 retn_stmt: RETURN ';' .

    $default  reduce using rule 35 (retn_stmt)


State 64

   34 retn_stmt: RETURN expr . ';'

    ';'  shift, and go to state 87


State 65

   29 expr_stmt: expr ';' .

    $default  reduce using rule 29 (expr_stmt)


State 66

   36 expr: var '=' . expr

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 88
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 67

   50 addop: '+' .

    $default  reduce using rule 50 (addop)


State 68

   51 addop: '-' .

    $default  reduce using rule 51 (addop)


State 69

   44 relop: LE .

    $default  reduce using rule 44 (relop)


State 70

   45 relop: LEQ .

    $default  reduce using rule 45 (relop)


State 71

   42 relop: GE .

    $default  reduce using rule 42 (relop)


State 72

   43 relop: GEQ .

    $default  reduce using rule 43 (relop)


State 73

   46 relop: EQ .

    $default  reduce using rule 46 (relop)


State 74

   47 relop: NEQ .

    $default  reduce using rule 47 (relop)


State 75

   40 simple_expr: add_expr relop . add_expr

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    var       go to state 89
    add_expr  go to state 90
    term      go to state 54
    factor    go to state 55
    call      go to state 56


State 76

   48 add_expr: add_expr addop . term

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    var     go to state 89
    term    go to state 91
    factor  go to state 55
    call    go to state 56


State 77

   54 mulop: '*' .

    $default  reduce using rule 54 (mulop)


State 78

   55 mulop: '/' .

    $default  reduce using rule 55 (mulop)


State 79

   52 term: term mulop . factor

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    var     go to state 89
    factor  go to state 92
    call    go to state 56


State 80

   56 factor: '(' expr ')' .

    $default  reduce using rule 56 (factor)


State 81

   64 arg_list: expr .

    $default  reduce using rule 64 (arg_list)


State 82

   60 call: ID '(' args . ')'

    ')'  shift, and go to state 93


State 83

   61 args: arg_list .
   63 arg_list: arg_list . ',' expr

    ','  shift, and go to state 94

    $default  reduce using rule 61 (args)


State 84

   39 var: ID '[' expr . ']'

    ']'  shift, and go to state 95


State 85

   31 selc_stmt: IF '(' expr . ')' stmt
   32          | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 96


State 86

   33 iter_stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 97


State 87

   34 retn_stmt: RETURN expr ';' .

    $default  reduce using rule 34 (retn_stmt)


State 88

   36 expr: var '=' expr .

    $default  reduce using rule 36 (expr)


State 89

   57 factor: var .

    $default  reduce using rule 57 (factor)


State 90

   40 simple_expr: add_expr relop add_expr .
   48 add_expr: add_expr . addop term

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68

    $default  reduce using rule 40 (simple_expr)

    addop  go to state 76


State 91

   48 add_expr: add_expr addop term .
   52 term: term . mulop factor

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 48 (add_expr)

    mulop  go to state 79


State 92

   52 term: term mulop factor .

    $default  reduce using rule 52 (term)


State 93

   60 call: ID '(' args ')' .

    $default  reduce using rule 60 (call)


State 94

   63 arg_list: arg_list ',' . expr

    '('  shift, and go to state 37
    ID   shift, and go to state 39
    NUM  shift, and go to state 40

    expr         go to state 98
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 95

   39 var: ID '[' expr ']' .

    $default  reduce using rule 39 (var)


State 96

   31 selc_stmt: IF '(' expr ')' . stmt
   32          | IF '(' expr ')' . stmt ELSE stmt

    '{'     shift, and go to state 16
    '('     shift, and go to state 37
    ';'     shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 99
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 97

   33 iter_stmt: WHILE '(' expr ')' . stmt

    '{'     shift, and go to state 16
    '('     shift, and go to state 37
    ';'     shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 100
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 98

   63 arg_list: arg_list ',' expr .

    $default  reduce using rule 63 (arg_list)


State 99

   31 selc_stmt: IF '(' expr ')' stmt .
   32          | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 101

    ELSE      [reduce using rule 31 (selc_stmt)]
    $default  reduce using rule 31 (selc_stmt)


State 100

   33 iter_stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 33 (iter_stmt)


State 101

   32 selc_stmt: IF '(' expr ')' stmt ELSE . stmt

    '{'     shift, and go to state 16
    '('     shift, and go to state 37
    ';'     shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    IF      shift, and go to state 41
    WHILE   shift, and go to state 42
    RETURN  shift, and go to state 43

    comp_stmt    go to state 44
    stmt         go to state 102
    expr_stmt    go to state 46
    selc_stmt    go to state 47
    iter_stmt    go to state 48
    retn_stmt    go to state 49
    expr         go to state 50
    var          go to state 51
    simple_expr  go to state 52
    add_expr     go to state 53
    term         go to state 54
    factor       go to state 55
    call         go to state 56


State 102

   32 selc_stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 32 (selc_stmt)
